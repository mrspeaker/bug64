[libraries]
Math;constant;PI
Math;constant;E
Math;function;abs;1
Math;function;acos;1
Math;function;asin;1
Math;function;atan;1
Math;function;atan2;2
Math;function;cbrt;1
Math;function;ceil;1
Math;function;cos;1
Math;function;cosh;1
Math;function;exp;1
Math;function;expm1;1
Math;function;floor;1
Math;function;hypot;2
Math;function;IEEEremainder;2
Math;function;log;1
Math;function;log10;1
Math;function;log1p;1
Math;function;max;2
Math;function;min;2
Math;function;pow;2
Math;function;random;0
Math;function;round;1
Math;function;signum;1
Math;function;sin;1
Math;function;sinh;1
Math;function;sqrt;1
Math;function;tan;1
Math;function;tanh;1
Math;function;toDegrees;1
Math;function;toRadians;1
Math;function;mod;2
Math;function;setSeed;1
Print;function;toIntString;1
Print;function;toIntString;2
Print;function;toHexString;1
Print;function;toHexString;2
Print;function;toBinaryString;1
Print;function;toBinaryString;2
Print;function;toOctalString;1
Print;function;toOctalString;2
Vector;function;Vector;0
Vector;function;Vector;3
Vector;function;Matrix;0
Vector;function;RotationMatrix;3
Vector;function;ScaleMatrix;3
Vector;function;MoveMatrix;3
Vector;function;PerspectiveMatrix;1
Constructors;constant;AT_ABSOLUTE
Constructors;constant;AT_ZEROPAGE
Constructors;constant;AT_ABSOLUTEX
Constructors;constant;AT_ABSOLUTEY
Constructors;constant;AT_IMMEDIATE
Constructors;constant;AT_INDIRECT
Constructors;constant;AT_IZEROPAGEX
Constructors;constant;AT_IZEROPAGEY
Constructors;constant;AT_NONE
Constructors;function;createFile;1
Constructors;function;List;0
Constructors;function;List;1
Constructors;function;Hashtable;0
Constructors;function;CmdArgument;2
Misc;constant;BLACK
Misc;constant;WHITE
Misc;constant;RED
Misc;constant;CYAN
Misc;constant;PURPLE
Misc;constant;GREEN
Misc;constant;BLUE
Misc;constant;YELLOW
Misc;constant;ORANGE
Misc;constant;BROWN
Misc;constant;LIGHT_RED
Misc;constant;DARK_GRAY
Misc;constant;DARK_GREY
Misc;constant;GRAY
Misc;constant;GREY
Misc;constant;LIGHT_GREEN
Misc;constant;LIGHT_BLUE
Misc;constant;LIGHT_GRAY
Misc;constant;LIGHT_GREY
Misc;constant;BF_C64FILE
Misc;constant;BF_KOALA
Misc;constant;BF_FLI
Misc;constant;BF_BITMAP_SINGLECOLOR
Misc;constant;BF_DOODLE
Misc;function;getFilename;0
Misc;function;getPath;0
Misc;function;getNamespace;0
Misc;function;LoadSid;1
Misc;function;LoadPicture;
Misc;function;LoadBinary;
65xxMnemonics;constant;ORA_IMM
65xxMnemonics;constant;ORA_ZP
65xxMnemonics;constant;ORA_ZPX
65xxMnemonics;constant;ORA_IZPX
65xxMnemonics;constant;ORA_IZPY
65xxMnemonics;constant;ORA_ABS
65xxMnemonics;constant;ORA_ABSX
65xxMnemonics;constant;ORA_ABSY
65xxMnemonics;constant;AND_IMM
65xxMnemonics;constant;AND_ZP
65xxMnemonics;constant;AND_ZPX
65xxMnemonics;constant;AND_IZPX
65xxMnemonics;constant;AND_IZPY
65xxMnemonics;constant;AND_ABS
65xxMnemonics;constant;AND_ABSX
65xxMnemonics;constant;AND_ABSY
65xxMnemonics;constant;EOR_IMM
65xxMnemonics;constant;EOR_ZP
65xxMnemonics;constant;EOR_ZPX
65xxMnemonics;constant;EOR_IZPX
65xxMnemonics;constant;EOR_IZPY
65xxMnemonics;constant;EOR_ABS
65xxMnemonics;constant;EOR_ABSX
65xxMnemonics;constant;EOR_ABSY
65xxMnemonics;constant;ADC_IMM
65xxMnemonics;constant;ADC_ZP
65xxMnemonics;constant;ADC_ZPX
65xxMnemonics;constant;ADC_IZPX
65xxMnemonics;constant;ADC_IZPY
65xxMnemonics;constant;ADC_ABS
65xxMnemonics;constant;ADC_ABSX
65xxMnemonics;constant;ADC_ABSY
65xxMnemonics;constant;SBC_IMM
65xxMnemonics;constant;SBC_ZP
65xxMnemonics;constant;SBC_ZPX
65xxMnemonics;constant;SBC_IZPX
65xxMnemonics;constant;SBC_IZPY
65xxMnemonics;constant;SBC_ABS
65xxMnemonics;constant;SBC_ABSX
65xxMnemonics;constant;SBC_ABSY
65xxMnemonics;constant;CMP_IMM
65xxMnemonics;constant;CMP_ZP
65xxMnemonics;constant;CMP_ZPX
65xxMnemonics;constant;CMP_IZPX
65xxMnemonics;constant;CMP_IZPY
65xxMnemonics;constant;CMP_ABS
65xxMnemonics;constant;CMP_ABSX
65xxMnemonics;constant;CMP_ABSY
65xxMnemonics;constant;CPX_IMM
65xxMnemonics;constant;CPX_ZP
65xxMnemonics;constant;CPX_ABS
65xxMnemonics;constant;CPY_IMM
65xxMnemonics;constant;CPY_ZP
65xxMnemonics;constant;CPY_ABS
65xxMnemonics;constant;DEC_ZP
65xxMnemonics;constant;DEC_ZPX
65xxMnemonics;constant;DEC_ABS
65xxMnemonics;constant;DEC_ABSX
65xxMnemonics;constant;DEX
65xxMnemonics;constant;DEY
65xxMnemonics;constant;INC_ZP
65xxMnemonics;constant;INC_ZPX
65xxMnemonics;constant;INC_ABS
65xxMnemonics;constant;INC_ABSX
65xxMnemonics;constant;INX
65xxMnemonics;constant;INY
65xxMnemonics;constant;ASL
65xxMnemonics;constant;ASL_ZP
65xxMnemonics;constant;ASL_ZPX
65xxMnemonics;constant;ASL_ABS
65xxMnemonics;constant;ASL_ABSX
65xxMnemonics;constant;ROL
65xxMnemonics;constant;ROL_ZP
65xxMnemonics;constant;ROL_ZPX
65xxMnemonics;constant;ROL_ABS
65xxMnemonics;constant;ROL_ABSX
65xxMnemonics;constant;LSR
65xxMnemonics;constant;LSR_ZP
65xxMnemonics;constant;LSR_ZPX
65xxMnemonics;constant;LSR_ABS
65xxMnemonics;constant;LSR_ABSX
65xxMnemonics;constant;ROR
65xxMnemonics;constant;ROR_ZP
65xxMnemonics;constant;ROR_ZPX
65xxMnemonics;constant;ROR_ABS
65xxMnemonics;constant;ROR_ABSX
65xxMnemonics;constant;LDA_IMM
65xxMnemonics;constant;LDA_ZP
65xxMnemonics;constant;LDA_ZPX
65xxMnemonics;constant;LDA_IZPX
65xxMnemonics;constant;LDA_IZPY
65xxMnemonics;constant;LDA_ABS
65xxMnemonics;constant;LDA_ABSX
65xxMnemonics;constant;LDA_ABSY
65xxMnemonics;constant;STA_ZP
65xxMnemonics;constant;STA_ZPX
65xxMnemonics;constant;STA_IZPX
65xxMnemonics;constant;STA_IZPY
65xxMnemonics;constant;STA_ABS
65xxMnemonics;constant;STA_ABSX
65xxMnemonics;constant;STA_ABSY
65xxMnemonics;constant;LDX_IMM
65xxMnemonics;constant;LDX_ZP
65xxMnemonics;constant;LDX_ZPY
65xxMnemonics;constant;LDX_ABS
65xxMnemonics;constant;LDX_ABSY
65xxMnemonics;constant;STX_ZP
65xxMnemonics;constant;STX_ZPY
65xxMnemonics;constant;STX_ABS
65xxMnemonics;constant;LDY_IMM
65xxMnemonics;constant;LDY_ZP
65xxMnemonics;constant;LDY_ZPX
65xxMnemonics;constant;LDY_ABS
65xxMnemonics;constant;LDY_ABSX
65xxMnemonics;constant;STY_ZP
65xxMnemonics;constant;STY_ZPX
65xxMnemonics;constant;STY_ABS
65xxMnemonics;constant;TAX
65xxMnemonics;constant;TXA
65xxMnemonics;constant;TAY
65xxMnemonics;constant;TYA
65xxMnemonics;constant;TSX
65xxMnemonics;constant;TXS
65xxMnemonics;constant;PLA
65xxMnemonics;constant;PHA
65xxMnemonics;constant;PLP
65xxMnemonics;constant;PHP
65xxMnemonics;constant;BPL_REL
65xxMnemonics;constant;BMI_REL
65xxMnemonics;constant;BVC_REL
65xxMnemonics;constant;BVS_REL
65xxMnemonics;constant;BCC_REL
65xxMnemonics;constant;BCS_REL
65xxMnemonics;constant;BNE_REL
65xxMnemonics;constant;BEQ_REL
65xxMnemonics;constant;BRK
65xxMnemonics;constant;RTI
65xxMnemonics;constant;JSR_ABS
65xxMnemonics;constant;RTS
65xxMnemonics;constant;JMP_ABS
65xxMnemonics;constant;JMP_IND
65xxMnemonics;constant;BIT_ZP
65xxMnemonics;constant;BIT_ABS
65xxMnemonics;constant;CLC
65xxMnemonics;constant;SEC
65xxMnemonics;constant;CLD
65xxMnemonics;constant;SED
65xxMnemonics;constant;CLI
65xxMnemonics;constant;SEI
65xxMnemonics;constant;CLV
65xxMnemonics;constant;NOP
65xxMnemonics;constant;NOP_IMM
65xxMnemonics;constant;NOP_ZP
65xxMnemonics;constant;NOP_ZPX
65xxMnemonics;constant;NOP_ABS
65xxMnemonics;constant;NOP_ABSX
65xxMnemonics;constant;SLO_ZP
65xxMnemonics;constant;SLO_ZPX
65xxMnemonics;constant;SLO_IZPX
65xxMnemonics;constant;SLO_IZPY
65xxMnemonics;constant;SLO_ABS
65xxMnemonics;constant;SLO_ABSX
65xxMnemonics;constant;SLO_ABSY
65xxMnemonics;constant;RLA_ZP
65xxMnemonics;constant;RLA_ZPX
65xxMnemonics;constant;RLA_IZPX
65xxMnemonics;constant;RLA_IZPY
65xxMnemonics;constant;RLA_ABS
65xxMnemonics;constant;RLA_ABSX
65xxMnemonics;constant;RLA_ABSY
65xxMnemonics;constant;SRE_ZP
65xxMnemonics;constant;SRE_ZPX
65xxMnemonics;constant;SRE_IZPX
65xxMnemonics;constant;SRE_IZPY
65xxMnemonics;constant;SRE_ABS
65xxMnemonics;constant;SRE_ABSX
65xxMnemonics;constant;SRE_ABSY
65xxMnemonics;constant;RRA_ZP
65xxMnemonics;constant;RRA_ZPX
65xxMnemonics;constant;RRA_IZPX
65xxMnemonics;constant;RRA_IZPY
65xxMnemonics;constant;RRA_ABS
65xxMnemonics;constant;RRA_ABSX
65xxMnemonics;constant;RRA_ABSY
65xxMnemonics;constant;SAX_ZP
65xxMnemonics;constant;SAX_ZPY
65xxMnemonics;constant;SAX_IZPX
65xxMnemonics;constant;SAX_ABS
65xxMnemonics;constant;LAX_IMM
65xxMnemonics;constant;LAX_ZP
65xxMnemonics;constant;LAX_ZPY
65xxMnemonics;constant;LAX_IZPX
65xxMnemonics;constant;LAX_IZPY
65xxMnemonics;constant;LAX_ABS
65xxMnemonics;constant;LAX_ABSY
65xxMnemonics;constant;DCP_ZP
65xxMnemonics;constant;DCP_ZPX
65xxMnemonics;constant;DCP_IZPX
65xxMnemonics;constant;DCP_IZPY
65xxMnemonics;constant;DCP_ABS
65xxMnemonics;constant;DCP_ABSX
65xxMnemonics;constant;DCP_ABSY
65xxMnemonics;constant;ISC_ZP
65xxMnemonics;constant;ISC_ZPX
65xxMnemonics;constant;ISC_IZPX
65xxMnemonics;constant;ISC_IZPY
65xxMnemonics;constant;ISC_ABS
65xxMnemonics;constant;ISC_ABSX
65xxMnemonics;constant;ISC_ABSY
65xxMnemonics;constant;ANC_IMM
65xxMnemonics;constant;ANC2_IMM
65xxMnemonics;constant;ALR_IMM
65xxMnemonics;constant;ARR_IMM
65xxMnemonics;constant;XAA_IMM
65xxMnemonics;constant;AXS_IMM
65xxMnemonics;constant;SBC2_IMM
65xxMnemonics;constant;AHX_IZPY
65xxMnemonics;constant;AHX_ABSY
65xxMnemonics;constant;SHY_ABSX
65xxMnemonics;constant;SHX_ABSY
65xxMnemonics;constant;TAS_ABSY
65xxMnemonics;constant;LAS_ABSY
65xxMnemonics;constant;SAC_IMM
65xxMnemonics;constant;SIR_IMM
65xxMnemonics;constant;BRA_REL
65xxMnemonics;function;asmCommandSize;1
[directives]
*;*=$1000;Sets the memory position to a given value.
.align;.align $100;Aligns the memory position with the given value. Ex. '.align $100' at memory position $1234 will set the position to $1300.
.assert;.assert "Test 1",2+2,4;Asserts that two expressions or codeblocks are equal.
.asserterror;.asserterror "Test 2", List().get(27);Asserts that a given expression or codeblock generates an error.
.break;.break;Puts a breakpoint on the next generated bytes.
.by;.by $01,$02,$03;An alias for '.byte'.
.byte;.byte $01,$02,$03;Outputs bytes.
.const;.const DELAY=7;Defines a constant.
.define;.define width, height {...};Executes a block of directives in 'functionmode' (faster) to define values.
.disk;.disk [..disk pararamters..] {..fileparameters..};Creates a d64 image file.
.dw;.dw $12341234;An alias for '.dword'.
.dword;.dword $12341234;Outputs doublewords (4 byte values).
.encoding;.encoding "screencode_upper";Sets the character encoding.
.enum;.enum {on, off};Defines a series of constants.
.error;.error "not good!";Creates an user raised error.
.errorif;.errorif x>10 "not good!";Creates an user raised error if condition is evaluated to true.
.eval;.eval x=x+y/2;Evaluates a script expression.
.file;.file [name="myfile.prg" segments="Code, Data"];Creates a prg or bin file from the given segments.
.filemodify;.filemodify Encrypt(33);Modify the output of the current source file with the given modifier.
.filenamespace;.filenamespace myspace;Creates a namespace for all the following directives in the current source file.
.fill;.fill 10, i*2;Fills a number of bytes with the value of a given expression.
.fillword;.fillword 10, i*$102;Fills a number of words with the value of a given expression.
.for;.for(var i;i<10;i++) {...};Creates a for loop.
.function;.function area(h,w) {..};Defines a function.
.if;.if(x>10) {...};Executes code if the given condition is true.
.import binary;.import binary "Music.bin";Imports a binary file.
.import c64;.import c64 "Music.c64";Imports a c64 files. Same as '.import binary', but ignores the two address bytes at the start of the file.
.import source;.import source "MyLib.asm";Imports another source file. (Depricated, use #import instead)
.import text;.import text "scroll.txt";Imports a text file.
.importonce;.importonce;Make the assembler skip the current file if it has already been imported. (Depricated, use #importonce instead)
.label;.label color=$d020;Assigns a given expression to a label.
.lohifill;.lohifill $100, i*40;Fills two table with hi and lo byte of the given expression. Address of the tables can be read by connecting a label.
.macro;.macro BasicUpstart() {...};Defines a macro.
.memblock;.memblock "New block";Defines a new memoryblock at the current memoryposition.
.modify;.modify Encrypt(27) {...};Modifies the output of a codeblock using the given modifier.
.namespace;.namespace myspace {..};Creates a local namespace.
.pc;.pc=$1000;Same as '*='
.plugin;.plugin "plugins.macros.MyMacro";Tells the assembler to look for a plugin at the given java-package path.
.print;.print "Hello";Prints a message to the console in the last pass.
.printnow;.printnow "Hello now";Prints a message to the console immediately.
.pseudocommand;.pseudocommand mov src:tar {...};Defines a pseudocommand.
.pseudopc;.pseudopc $2000 {...};Sets the program counter to something else than the actual memory position.
.return;.return 27;Used inside functions to return a value.
.segment;.segment Data "My Data";Switches to another segment.
.segmentdef;.segmentdef Data [start=$1000];Defines a segment.
.segmentout;.segmentout [segments="DRIVE_CODE"];Output the bytes of an intermediate segment to the current memoryblock.
.struct;.struct Point {x,y};Creates a user defined structure.
.te;.te "hello";An alias for '.text'.
.text;.text "hello";Dumps text bytes to memory.
.var;.var x=27;Defines a variable.
.while;.while(i<10) {...};Creates a while loop.
.wo;.wo $1000,$1012;An alias for '.word'.
.word;.word $1000,$1012;Outputs words (two bytes values),
.zp;.zp { label: .byte 0 ... };Marks unresolved labels as being in the zeropage.
[ppdirectives]
#define;#define DEBUG;Defines a preprocessor symbol.
#elif;#elif TEST;The combination of an #else and an #if preprocessor directive.
#else;#else;Used after an #if to start an else block which is executed if the condition is false.
#endif;#endif;Marks the end of an #if/#else block.
#if;#if !DEBUG;Discards the sourcecode after the #if-directive if the condition is false.
#import;#import "file2.asm";Imports another sourcefile.
#importif;#importif !DEBUG "file2.asm";Imports another sourcefile if the given expression is evaluated to true.
#importonce;#importonce;Make the assembler skip the current file if it has already been imported.
#undef;#undef DEBUG;Removes the definition of a preprocessor symbol.
[errors]
Error;9,19,9,24,0;Unknown symbol 'SCREEN'
Error;11,19,11,24,0;Unknown symbol 'SCREEN'
Error;14,19,14,23,0;Unknown symbol 'COLOR'
Error;16,19,16,23,0;Unknown symbol 'COLOR'
Error;19,19,19,31,0;Unknown symbol 'tile_map_data'
Error;21,19,21,31,0;Unknown symbol 'tile_map_data'
Error;57,19,57,30,0;Unknown symbol 'tileset_data'
Error;60,19,60,30,0;Unknown symbol 'tileset_data'
Error;71,17,71,35,0;Unknown symbol 'tileset_attrib_data'
Error;101,18,101,26,0;Unknown symbol 'TILE_COLS'
Error;137,18,137,26,0;Unknown symbol 'TILE_ROWS'
[syntax]
comment;38,31,38,56,0
comment;40,35,40,41,0
comment;47,13,47,22,0
comment;57,34,57,59,0
comment;65,28,65,69,0
comment;80,13,80,36,0
comment;89,13,89,38,0
comment;105,17,105,40,0
comment;114,1,114,19,0
comment;115,1,115,27,0
comment;116,1,116,23,0
comment;117,1,117,27,0
comment;118,1,118,27,0
comment;119,1,119,22,0
comment;120,1,120,27,0
comment;121,1,121,27,0
comment;122,1,122,6,0
comment;124,13,124,41,0
label;1,1,1,4,0
label;3,1,3,15,0
directive;3,17,3,21,0
label;4,1,4,4,0
directive;4,17,4,21,0
label;5,1,5,4,0
directive;5,17,5,21,0
label;6,1,6,11,0
directive;6,17,6,21,0
label;7,1,7,5,0
directive;8,8,8,13,0
symbolReference;9,19,9,24,0
operator;9,18,9,18,0
mnemonic;9,13,9,15,0
symbolReference;10,17,10,19,0
operator;10,21,10,21,0
mnemonic;10,13,10,15,0
symbolReference;11,19,11,24,0
operator;11,18,11,18,0
mnemonic;11,13,11,15,0
symbolReference;12,17,12,19,0
operator;12,21,12,21,0
mnemonic;12,13,12,15,0
symbolReference;14,19,14,23,0
operator;14,18,14,18,0
mnemonic;14,13,14,15,0
symbolReference;15,17,15,19,0
operator;15,21,15,21,0
mnemonic;15,13,15,15,0
symbolReference;16,19,16,23,0
operator;16,18,16,18,0
mnemonic;16,13,16,15,0
symbolReference;17,17,17,19,0
operator;17,21,17,21,0
mnemonic;17,13,17,15,0
symbolReference;19,19,19,31,0
operator;19,18,19,18,0
mnemonic;19,13,19,15,0
symbolReference;20,17,20,20,0
operator;20,22,20,22,0
mnemonic;20,13,20,15,0
symbolReference;21,19,21,31,0
operator;21,18,21,18,0
mnemonic;21,13,21,15,0
symbolReference;22,17,22,20,0
operator;22,22,22,22,0
mnemonic;22,13,22,15,0
mnemonic;24,13,24,15,0
symbolReference;25,17,25,26,0
mnemonic;25,13,25,15,0
symbolReference;26,17,26,19,0
mnemonic;26,13,26,15,0
label;27,1,27,10,0
mnemonic;28,13,28,15,0
symbolReference;29,17,29,19,0
mnemonic;29,13,29,15,0
label;30,1,30,10,0
mnemonic;31,13,31,15,0
label;33,1,33,11,0
mnemonic;34,13,34,15,0
symbolReference;35,17,35,26,0
operator;35,28,35,28,0
mnemonic;35,13,35,15,0
label;37,1,37,5,0
mnemonic;38,13,38,15,0
symbolReference;39,17,39,26,0
mnemonic;39,13,39,15,0
symbolReference;40,17,40,26,0
operator;40,28,40,28,0
mnemonic;40,13,40,15,0
symbolReference;41,17,41,26,0
operator;41,28,41,28,0
mnemonic;41,13,41,15,0
symbolReference;42,17,42,26,0
operator;42,28,42,28,0
mnemonic;42,13,42,15,0
symbolReference;43,17,43,26,0
operator;43,28,43,28,0
mnemonic;43,13,43,15,0
symbolReference;44,17,44,26,0
operator;44,28,44,28,0
mnemonic;44,13,44,15,0
symbolReference;45,17,45,26,0
operator;45,28,45,28,0
mnemonic;45,13,45,15,0
symbolReference;46,17,46,26,0
operator;46,28,46,28,0
mnemonic;46,13,46,15,0
mnemonic;48,13,48,15,0
symbolReference;49,17,49,26,0
operator;49,28,49,28,0
mnemonic;49,13,49,15,0
symbolReference;50,17,50,26,0
mnemonic;50,13,50,15,0
symbolReference;51,17,51,26,0
operator;51,28,51,28,0
mnemonic;51,13,51,15,0
symbolReference;52,17,52,26,0
operator;52,28,52,28,0
mnemonic;52,13,52,15,0
mnemonic;53,13,53,15,0
symbolReference;54,17,54,26,0
operator;54,28,54,28,0
mnemonic;54,13,54,15,0
mnemonic;56,13,56,15,0
symbolReference;57,19,57,30,0
operator;57,18,57,18,0
mnemonic;57,13,57,15,0
symbolReference;58,17,58,26,0
operator;58,28,58,28,0
mnemonic;58,13,58,15,0
symbolReference;59,17,59,26,0
operator;59,28,59,28,0
mnemonic;59,13,59,15,0
symbolReference;60,19,60,30,0
operator;60,18,60,18,0
mnemonic;60,13,60,15,0
symbolReference;61,17,61,26,0
operator;61,28,61,28,0
mnemonic;61,13,61,15,0
symbolReference;62,17,62,26,0
operator;62,28,62,28,0
mnemonic;62,13,62,15,0
label;64,1,64,11,0
mnemonic;65,13,65,15,0
symbolReference;66,17,66,30,0
mnemonic;66,13,66,15,0
label;68,1,68,4,0
mnemonic;69,13,69,15,0
symbolReference;70,17,70,26,0
mnemonic;70,13,70,15,0
symbolReference;71,17,71,35,0
mnemonic;71,13,71,15,0
symbolReference;72,17,72,30,0
mnemonic;72,13,72,15,0
label;73,1,73,4,0
mnemonic;74,13,74,15,0
mnemonic;75,13,75,15,0
mnemonic;76,13,76,15,0
symbolReference;78,17,78,27,0
mnemonic;78,13,78,15,0
mnemonic;81,13,81,15,0
symbolReference;82,17,82,20,0
operator;82,22,82,22,0
mnemonic;82,13,82,15,0
mnemonic;83,13,83,15,0
symbolReference;84,17,84,20,0
operator;84,22,84,22,0
mnemonic;84,13,84,15,0
symbolReference;85,17,85,20,0
operator;85,22,85,22,0
mnemonic;85,13,85,15,0
mnemonic;86,13,86,15,0
symbolReference;87,17,87,20,0
operator;87,22,87,22,0
mnemonic;87,13,87,15,0
mnemonic;90,13,90,15,0
symbolReference;91,17,91,19,0
operator;91,21,91,21,0
mnemonic;91,13,91,15,0
mnemonic;92,13,92,15,0
symbolReference;93,17,93,19,0
operator;93,21,93,21,0
mnemonic;93,13,93,15,0
symbolReference;94,17,94,19,0
operator;94,21,94,21,0
mnemonic;94,13,94,15,0
symbolReference;95,17,95,18,0
mnemonic;95,13,95,15,0
symbolReference;96,17,96,19,0
operator;96,21,96,21,0
mnemonic;96,13,96,15,0
symbolReference;97,17,97,19,0
operator;97,21,97,21,0
mnemonic;97,13,97,15,0
label;98,1,98,2,0
symbolReference;99,17,99,19,0
mnemonic;99,13,99,15,0
symbolReference;100,17,100,19,0
mnemonic;100,13,100,15,0
symbolReference;101,18,101,26,0
mnemonic;101,13,101,15,0
symbolReference;102,17,102,18,0
mnemonic;102,13,102,15,0
symbolReference;103,17,103,26,0
mnemonic;103,13,103,15,0
label;104,1,104,2,0
mnemonic;106,13,106,15,0
symbolReference;107,17,107,20,0
operator;107,22,107,22,0
mnemonic;107,13,107,15,0
mnemonic;108,13,108,15,0
symbolReference;109,17,109,20,0
operator;109,22,109,22,0
mnemonic;109,13,109,15,0
symbolReference;110,17,110,20,0
operator;110,22,110,22,0
mnemonic;110,13,110,15,0
mnemonic;111,13,111,15,0
symbolReference;112,17,112,20,0
operator;112,22,112,22,0
mnemonic;112,13,112,15,0
mnemonic;125,13,125,15,0
symbolReference;126,17,126,19,0
operator;126,21,126,21,0
mnemonic;126,13,126,15,0
operator;127,20,127,20,0
operator;127,22,127,22,0
mnemonic;127,13,127,15,0
symbolReference;128,17,128,19,0
operator;128,21,128,21,0
mnemonic;128,13,128,15,0
symbolReference;129,17,129,19,0
operator;129,21,129,21,0
mnemonic;129,13,129,15,0
symbolReference;130,17,130,18,0
mnemonic;130,13,130,15,0
symbolReference;131,17,131,19,0
operator;131,21,131,21,0
mnemonic;131,13,131,15,0
symbolReference;132,17,132,19,0
operator;132,21,132,21,0
mnemonic;132,13,132,15,0
label;133,1,133,2,0
symbolReference;135,17,135,19,0
mnemonic;135,13,135,15,0
symbolReference;136,17,136,19,0
mnemonic;136,13,136,15,0
symbolReference;137,18,137,26,0
mnemonic;137,13,137,15,0
symbolReference;138,17,138,18,0
mnemonic;138,13,138,15,0
symbolReference;139,17,139,26,0
mnemonic;139,13,139,15,0
label;140,1,140,2,0
mnemonic;142,13,142,15,0
comment;1,1,24,2,1
comment;26,1,26,34,1
comment;27,1,27,10,1
comment;28,1,28,34,1
comment;30,1,36,62,1
directive;37,1,37,6,1
comment;38,20,38,35,1
comment;39,16,39,27,1
comment;40,16,40,22,1
comment;44,14,44,58,1
comment;47,1,53,62,1
directive;38,2,38,6,1
symbolReference;38,8,38,17,1
directive;39,5,39,9,1
directive;40,5,40,9,1
directive;41,2,41,6,1
symbolReference;41,20,41,26,1
functionCall;41,8,41,18,1
directive;42,2,42,6,1
label;43,1,43,11,1
directive;44,5,44,9,1
directive;54,1,54,6,1
comment;56,20,56,35,1
comment;57,16,57,27,1
comment;58,16,58,22,1
comment;62,14,62,58,1
directive;56,2,56,6,1
symbolReference;56,8,56,17,1
directive;57,5,57,9,1
directive;58,5,58,9,1
directive;59,2,59,6,1
symbolReference;59,20,59,26,1
functionCall;59,8,59,18,1
directive;60,2,60,6,1
label;61,1,61,11,1
directive;62,5,62,9,1
[files]
0;/Users/mrspeaker/Documents/dev/retro/frist/src/map.asm
1;KickAss.jar:/include/autoinclude.asm
