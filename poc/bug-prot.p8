pico-8 cartridge // http://www.pico-8.com
version 32
__lua__
d_up=1
d_down=2
d_left=4
d_right=8

tm=0
ta=0
function _update()
 tm+=1
 pxo+=pxd
 pyo+=pyd
  if btn(❎) then
  fly_to=dir
  jump=true
 end
 if tm>=8 then
  pxo=0
  pyo=0
 	update_player()
 	tm=0
 end
 
 ta+=1
 if ta>=12 then
 	move_arrows()
  ta=0
 end
 
 check_cols()
end

function is_wall(tile)
 local m=is_maze(tile)
 if on_maze then
  return not m
 end
 return m
end

function is_maze(tile)
  return fget(tile,7)
end

function is_v(dir)
	return dir&3>0
end

function is_h(dir)
 return dir&12>0
end

function in_arrow_dir(d1,d2)
 return (d1&d_down>0 and d2&d_down>0)
   or (d1&d_up>0 and d2&d_up>0)
   or (d1&d_left>0 and d2&d_left>0)
   or (d1&d_right>0 and d2&d_right>0)
end


function get_joy_dir()
 if btn(⬆️) then return d_up end
 if btn(⬇️) then return d_down end
 if btn(⬅️) then return d_left end
 if btn(➡️) then return d_right end
 return 0
end

function check_cols()
	if px==ax and py==ay then
		fly_to=ad
	else
	end
end

function _draw()
 cls()
 map(0,0)
 draw_ar()
 draw_p()
 print(msg,1,1,2)
end
-->8
// player

px=1
py=1
pxo=0
pyo=0
pxd=0
pyd=0
on_maze=false
fly_to=nil
jump=false
trail={}
can_follow=true

function draw_p()
 local f=2
 if on_maze or fly_to~=nil then
 	f=34
 end
 spr(f,px*8+pxo,py*8+pyo)
end

function update_player()
 if fly_to~=nil then
  fly()
 else
  jog()
 end
end

function fly()
 local c_tile=mget(px,py)
 local c_flags=fget(c_tile)
 
 local xo=0
 local yo=0
 
 local j=get_joy_dir()
 if j==d_left then xo-=1 end
 if j==d_right then xo+=1 end
 if j==d_up then yo-=1 end
 if j==d_down then yo+=1 end
 
 fly_to=nil
 local n_tile=mget(px+xo,py+yo)
 local n_flags=fget(n_tile)
 if jump then
  if is_maze(n_tile) then
   jump=false
 	 return
 	end
 end
 jump=false
 px+=xo
 py+=yo
 if n_flags&128!=c_flags&128 then
 	on_maze=not on_maze
 end
end

function jog()
 local dir=get_joy_dir()
 local dx=0
 local dy=0
 
 if dir&d_up>0 then dy-=1 end
 if dir&d_down>0 then dy+=1 end
 if dir&d_left>0 then dx-=1 end
 if dir&d_right>0 then dx+=1 end
 
 local old_px=px
 local old_py=py
 local c_tile=mget(px,py)
 local c_flags=fget(c_tile)
 
 local n_tile=mget(px+dx,py+dy)
 local n_flags=fget(n_tile)
 
 local c_dirs=c_flags&15
 local c_arrow=c_dirs>0
 local n_dirs=n_flags&15
 local n_arrow=n_dirs>0
 local n_wall=is_wall(n_tile)
 
 local clear=false
 
 if n_arrow and n_wall then
  // go arrow on a wall.
  if in_arrow_dir(n_dirs,dir) then
  	clear=true
  	on_maze=not on_maze
  end
 elseif n_arrow and not n_wall then
  clear=true
 elseif c_arrow and n_wall then
 	// from arrow to wall
 	if in_arrow_dir(c_dirs,dir) then
  	clear=true
  	on_maze=not on_maze
  end
 elseif c_arrow and not n_wall then
  // from arrow to ground
  clear=true
 elseif on_maze and n_wall then
  clear=true
  on_maze=not on_maze
 elseif not n_wall then
 	clear=true
 end
 
 can_follow=not on_maze
 
 pxd=0
 pyd=0
 if clear then
  if dx!=0 or dy!=0 then
   add_trail(px,py)
  end
 	px+=dx
 	py+=dy
 	//pxd=dx==0and 0 or sgn(dx)
 	//pyd=dy==0and 0 or sgn(dy)
 	if n_tile==3 then
 		mset(px,py,0)
 	end
 	if n_tile==17 then
 	 mset(px,py,1)
 	end
	elseif fly_to~=nil then
  // can't fly there
  fly_to=nil
 end
end



function add_trail(x,y)
 add(trail, y*16+x)
 if follow then  
  return
 end
 if #trail > 9 then
  for i=1,#trail-9 do
 		deli(trail,1)
 	end
 end

end
-->8
// bug

ax=9
ay=1
ad=d_up
adir=d_down
at=0
follow=nil

function draw_ar()
 local o=0
 if adir&1>0 then o=0 end
 if adir&2>0 then o=1 end
 if adir&4>0 then o=2 end
 if adir&8>0 then o=3 end
 
	spr(4+o,ax*8,ay*8)
end

function move_arrows()
 if follow then
  move_follow()
  return
 end
 
 rnd_dir_intersection()
 move_arrow_forward()
 if can_follow then
  check_if_follow(ax,ay)
 end
end

function check_if_follow(x,y)
 local pos=y*16+x
	for i=1,min(#trail,9) do
		if pos==trail[i] then
		 follow=i
		end
	end
end

function rotate_arrows(dir)
 if dir!= 0 then
  ad=dir
 end
end

function move_follow()
 if follow > #trail then
  follow = nil
  msg="done"
  return
 end
	local p=trail[follow]
	local y=p\16
	local x=p%16
	if not is_maze(mget(x,y)) then
	 msg="follow"
	 ax=x
	 ay=y
	 follow+=1
 else
  msg="no follow"
  follow=nil
 end
end

function move_arrow_forward()
 local c_tile=mget(ax,ay)
 local xo=0
 local yo=0
 if adir==d_left then
  xo=-1
  local n_tile=mget(ax+xo,ay)
  if is_maze(n_tile) then
  	adir=d_right
  	xo=0
  end
 elseif adir==d_right then
 	xo=1
 	local n_tile=mget(ax+xo,ay)
  if is_maze(n_tile) then
  	adir=d_left
  	xo=0
  end
 elseif adir==d_up then
  yo=-1
  local n_tile=mget(ax,ay+yo)
  if is_maze(n_tile) then
  	adir=d_down
  	yo=0
  end
 else
 	yo=1
 	local n_tile=mget(ax,ay+yo)
  if is_maze(n_tile) then
  	adir=d_up
  	yo=0
  end
 end
 ax+=xo
 ay+=yo
end

function rnd_dir_intersection()
local dirs={adir}
 if is_h(adir) then
 	local u=mget(ax,ay-1)
 	local d=mget(ax,ay+1)
 	if not is_maze(u) then
 	 add(dirs, d_up)
 	end
 	if not is_maze(d) then
   add(dirs, d_down)
  end
  adir=rnd(dirs)
 else
  local l=mget(ax-1,ay)
 	local r=mget(ax+1,ay)
 	if not is_maze(l) then
 	 add(dirs, d_left)
 	end
 	if not is_maze(r) then
   add(dirs, d_right)
  end
  adir=rnd(dirs)
	
 end
end

__gfx__
00000000eeeeeeee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000eeeeeeee00000000000000000000d0000000d000000d00000000d0000000000000000000000000000000000000000000000000000000000000000000
00700700eeeeeeee0056660000000000000ddd000000d00000d0000000000d000000000000000000000000000000000000000000000000000000000000000000
00077000eeeeeeee005666000006600000d0d0d00000d0000dddddd00dddddd00000000000000000000000000000000000000000000000000000000000000000
00077000eeeeeeee00566600000000000000d00000d0d0d000d0000000000d000000000000000000000000000000000000000000000000000000000000000000
00700700eeeeeeee00566600000000000000d000000ddd00000d00000000d0000000000000000000000000000000000000000000000000000000000000000000
00000000eeeeeeee00000000000000000000d0000000d00000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000eeeeeeee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000eeeeeeee1111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000eeeeeeee1111211111112111111121111112111106666600000000000000000000000000000000000000000000000000000000000000000000000000
00000000eeeeeeee1111211111122211111211111111211106161600000000000000000000000000000000000000000000000000000000000000000000000000
00000000eee55eee1121212111212121112222211222221106666660000000000000000000000000000000000000000000000000000000000000000000000000
00000000eeeeeeee1112221111112111111211111111211100666660000000000000000000000000000000000000000000000000000000000000000000000000
00000000eeeeeeee1111211111112111111121111112111100666660000000000000000000000000000000000000000000000000000000000000000000000000
00000000eeeeeeee1111111111111111111111111111111100066660000000000000000000000000000000000000000000000000000000000000000000000000
00000000eeeeeeee1111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000056660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000566666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000566666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000566666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000566666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000056660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0080000000000000000000000000000000808281848800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
1111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1103031103030303030303031100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1103031103111103110311031100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1103030303031103030311031100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1103110311031103110311031100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1103110311031103111111031100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1103030311030303030303031100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
